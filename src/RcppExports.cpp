// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Arma_colSums
arma::rowvec Arma_colSums(const arma::mat& x);
RcppExport SEXP _Bayesprofiling_Arma_colSums(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Arma_colSums(x));
    return rcpp_result_gen;
END_RCPP
}
// Arma_colmax
arma::rowvec Arma_colmax(const arma::mat& x);
RcppExport SEXP _Bayesprofiling_Arma_colmax(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Arma_colmax(x));
    return rcpp_result_gen;
END_RCPP
}
// Arma_colmean
arma::rowvec Arma_colmean(const arma::mat& x);
RcppExport SEXP _Bayesprofiling_Arma_colmean(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Arma_colmean(x));
    return rcpp_result_gen;
END_RCPP
}
// Arma_rowSums
arma::colvec Arma_rowSums(const arma::mat& x);
RcppExport SEXP _Bayesprofiling_Arma_rowSums(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Arma_rowSums(x));
    return rcpp_result_gen;
END_RCPP
}
// Arma_rowmax
arma::colvec Arma_rowmax(const arma::mat& x);
RcppExport SEXP _Bayesprofiling_Arma_rowmax(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Arma_rowmax(x));
    return rcpp_result_gen;
END_RCPP
}
// Arma_rowmean
arma::colvec Arma_rowmean(const arma::mat& x);
RcppExport SEXP _Bayesprofiling_Arma_rowmean(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(Arma_rowmean(x));
    return rcpp_result_gen;
END_RCPP
}
// dmvn
arma::vec dmvn(arma::mat const& x, arma::rowvec const& mu, arma::mat const& cov, bool const logd);
RcppExport SEXP _Bayesprofiling_dmvn(SEXP xSEXP, SEXP muSEXP, SEXP covSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat const& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec const& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat const& >::type cov(covSEXP);
    Rcpp::traits::input_parameter< bool const >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmvn(x, mu, cov, logd));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Bayesprofiling_Arma_colSums", (DL_FUNC) &_Bayesprofiling_Arma_colSums, 1},
    {"_Bayesprofiling_Arma_colmax", (DL_FUNC) &_Bayesprofiling_Arma_colmax, 1},
    {"_Bayesprofiling_Arma_colmean", (DL_FUNC) &_Bayesprofiling_Arma_colmean, 1},
    {"_Bayesprofiling_Arma_rowSums", (DL_FUNC) &_Bayesprofiling_Arma_rowSums, 1},
    {"_Bayesprofiling_Arma_rowmax", (DL_FUNC) &_Bayesprofiling_Arma_rowmax, 1},
    {"_Bayesprofiling_Arma_rowmean", (DL_FUNC) &_Bayesprofiling_Arma_rowmean, 1},
    {"_Bayesprofiling_dmvn", (DL_FUNC) &_Bayesprofiling_dmvn, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_Bayesprofiling(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
